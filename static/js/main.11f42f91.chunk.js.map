{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Burger/BuildControls/BuildControls.module.css","components/Layout/Layout.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","hoc/Auxilary/Auxilary.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Backdrop/Backdrop.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","aux","props","children","layout","className","styles","Content","burgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Bacon","Salad","Cheese","burger","transformedIngredients","Object","keys","ingredients","map","key","Array","_","i","BurgerIngredient","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","onClick","removed","bind","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","item","addIngredient","removeIngredient","showModal","OrderButton","totalAmount","modal","Modal","style","transform","show","opacity","orderSummary","ingredientSummary","listItems","textTransform","backdrop","Backdrop","closeModal","INGREDIENT_PRICES","salad","bacon","meat","cheese","BurgerBuilder","state","totalPrice","addIngredientHandler","updatedCount","updatedIngredients","newTotalAmount","priceAddition","newPrice","setState","removeIngredientHandler","oldCount","newCount","disabledInfo","this","OrderSummary","Component","App","Layout","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.11f42f91.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__1qQeN\",\"BreadTop\":\"BurgerIngredient_BreadTop__2Nu1j\",\"Seeds1\":\"BurgerIngredient_Seeds1__1EVjj\",\"Seeds2\":\"BurgerIngredient_Seeds2__2MLjl\",\"Meat\":\"BurgerIngredient_Meat__2xJ1Q\",\"Cheese\":\"BurgerIngredient_Cheese__PcDFH\",\"Salad\":\"BurgerIngredient_Salad__3OcQo\",\"Bacon\":\"BurgerIngredient_Bacon__25qTW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__1EJIe\",\"Label\":\"BuildControl_Label__3PVtf\",\"Less\":\"BuildControl_Less__1u4Ze\",\"More\":\"BuildControl_More__2mY1l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2pQOg\",\"OrderButton\":\"BuildControls_OrderButton__2OEaD\",\"enable\":\"BuildControls_enable__pF9ze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3-XQW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__38KiN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__csizb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1AJSv\"};","const aux = (props) => props.children;\r\n\r\nexport default aux;","import React from \"react\";\r\n\r\nimport Aux from \"../../hoc/Auxilary/Auxilary\";\r\nimport styles from \"./Layout.module.css\";\r\n\r\nconst layout = (props) => {\r\n    return (\r\n        <Aux>\r\n            <div>Toolbar, SideDrawer, Backdrop</div>\r\n            <main className={styles.Content}>{props.children}</main>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default layout;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./BurgerIngredient.module.css\";\r\n\r\nconst burgerIngredient = (props) => {\r\n    let ingredient = null;\r\n\r\n    switch (props.type) {\r\n        case \"bread-bottom\":\r\n            ingredient = <div className={styles.BreadBottom}></div>;\r\n            break;\r\n        case \"bread-top\":\r\n            ingredient = (\r\n                <div className={styles.BreadTop}>\r\n                    <div className={styles.Seeds1}></div>\r\n                    <div className={styles.Seeds2}></div>\r\n                </div>\r\n            );\r\n            break;\r\n        case \"meat\":\r\n            ingredient = <div className={styles.Meat}></div>;\r\n            break;\r\n        case \"bacon\":\r\n            ingredient = <div className={styles.Bacon}></div>;\r\n            break;\r\n        case \"salad\":\r\n            ingredient = <div className={styles.Salad}></div>;\r\n            break;\r\n        case \"cheese\":\r\n            ingredient = <div className={styles.Cheese}></div>;\r\n            break;\r\n        default: ingredient = null;\r\n    }\r\n    return ingredient;\r\n};\r\n\r\nburgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default burgerIngredient;\r\n","import React from \"react\";\r\n\r\nimport styles from \"./Burger.module.css\";\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\n\r\nconst burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map((key) => {\r\n            return [...Array(props.ingredients[key])].map((_, i) => {\r\n                return <BurgerIngredient key={key + i} type={key} />;\r\n            });\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el);\r\n        }, []);\r\n\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Fill with ingredients!</p>;\r\n    }\r\n\r\n    return (\r\n        <div className={styles.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;\r\n","import React from \"react\";\r\nimport styles from \"./BuildControl.module.css\"\r\n\r\nconst buildControl = (props) => {\r\n    \r\n    return (\r\n    \r\n        <div className={styles.BuildControl}>\r\n            <div className={styles.Label}>{props.label}</div>\r\n            <button className={styles.Less} onClick={props.removed.bind(null, props.type)} disabled={props.disabled}>Less</button>\r\n            <button className={styles.More} onClick={props.added.bind(null, props.type)}>More</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default buildControl;\r\n","import React from \"react\";\r\n\r\nimport styles from \"./BuildControls.module.css\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\n\r\nconst controls = [\r\n    { label: \"Salad\", type: \"salad\" },\r\n    { label: \"Bacon\", type: \"bacon\" },\r\n    { label: \"Cheese\", type: \"cheese\" },\r\n    { label: \"Meat\", type: \"meat\" },\r\n];\r\n\r\n\r\nconst buildControls = (props) => {\r\n\r\n    return (\r\n        <div className={styles.BuildControls}>\r\n            <p>Total price: <strong>${props.price.toFixed(2)}</strong></p>\r\n            {controls.map((item) => (\r\n                <BuildControl\r\n                    key={item.label}\r\n                    label={item.label}\r\n                    type={item.type}\r\n                    added={props.addIngredient}\r\n                    removed={props.removeIngredient}\r\n                    disabled={props.disabled[item.type]}\r\n                />\r\n            ))}\r\n            <button onClick={props.showModal} className={styles.OrderButton} disabled={props.totalAmount <= 0}>ORDER NOW!</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default buildControls;\r\n","import React from \"react\";\r\n\r\nimport styles from \"./Modal.module.css\";\r\n\r\nconst modal = (props) => {\r\n    return (\r\n        <div\r\n            className={styles.Modal}\r\n            style={{\r\n                transform: props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n                opacity: props.show ? \"1\" : \"0\",\r\n            }}\r\n        >\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default modal;\r\n","import React from \"react\";\r\n\r\nimport Aux from \"../../../hoc/Auxilary/Auxilary\";\r\n\r\nconst orderSummary = (props) => {\r\n    const ingredientSummary = props.ingredients;\r\n    const listItems = Object.keys(ingredientSummary).map((key) => (\r\n        <li key={key}>\r\n            <span style={{ textTransform: \"capitalize\" }}>{key}</span>:{\" \"}\r\n            {ingredientSummary[key]}x\r\n        </li>\r\n    ));\r\n    return (\r\n        <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>Delicious Burger with following ingredients:</p>\r\n            <ul>{listItems}</ul>\r\n            <p>Checking out?</p>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default orderSummary;\r\n","import React from \"react\";\r\n\r\nimport styles from \"./Backdrop.module.css\";\r\n\r\nconst backdrop = (props) => {\r\n    return props.show ? <div className={styles.Backdrop} onClick={props.closeModal}></div> : null;\r\n};\r\n\r\nexport default backdrop;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../hoc/Auxilary/Auxilary\";\r\n\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport Backdrop from \"../../components/UI/Backdrop/Backdrop\";\r\n\r\n\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 1,\r\n    bacon: 4.5,\r\n    meat: 5,\r\n    cheese: 2,\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0,\r\n        },\r\n        totalAmount: 0,\r\n        totalPrice: 1,\r\n        showModal: false,\r\n    };\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients,\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n\r\n        const oldTotalAmount = this.state.totalAmount;\r\n        const newTotalAmount = oldTotalAmount + 1;\r\n\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({\r\n            totalPrice: newPrice,\r\n            totalAmount: newTotalAmount,\r\n            ingredients: updatedIngredients,\r\n        });\r\n    };\r\n\r\n    showModal = () => {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({showModal: false});\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if (oldCount <= 0) {\r\n            return;\r\n        }\r\n        const newCount = oldCount - 1;\r\n\r\n        const updatedIngredients = { ...this.state.ingredients };\r\n        updatedIngredients[type] = newCount;\r\n\r\n        const oldTotalAmount = this.state.totalAmount;\r\n        const newTotalAmount = oldTotalAmount - 1;\r\n\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - INGREDIENT_PRICES[type];\r\n\r\n        this.setState({\r\n            totalPrice: newPrice,\r\n            totalAmount: newTotalAmount,\r\n            ingredients: updatedIngredients,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const disabledInfo = {...this.state.ingredients};\r\n\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.state.showModal} closeModal={this.closeModal}/>\r\n                <Modal show={this.state.showModal} closeModal={this.closeModal}>\r\n                    <OrderSummary ingredients={this.state.ingredients} />\r\n                </Modal>\r\n                <Burger ingredients={this.state.ingredients} />\r\n                <BuildControls\r\n                    addIngredient={this.addIngredientHandler}\r\n                    removeIngredient={this.removeIngredientHandler}\r\n                    disabled={disabledInfo}\r\n                    price={this.state.totalPrice}\r\n                    totalAmount={this.state.totalAmount}\r\n                    showModal={this.showModal}\r\n                />\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;\r\n","import React, { Component } from \"react\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <Layout>\n                    <BurgerBuilder />\n                </Layout>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}